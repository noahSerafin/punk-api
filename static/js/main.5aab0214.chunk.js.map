{"version":3,"sources":["assets/images/Capture.PNG","assets/images/tick.PNG","components/Filters/Filters.jsx","containers/SideNav/SideNav.jsx","components/BeerList/BeerList.jsx","App.jsx","reportWebVitals.js","index.js"],"names":["Filters","props","handleABVFilter","handlePHFilter","handleClassicFilter","ABV","classic","PH","ABVImg","box","tick","ClassicImg","PHImg","console","log","className","src","alt","onClick","SideNav","searchABV","searchClassic","searchPH","handleInput","useState","ABVTickBox","setABVTickBox","classicTickBox","setClassicTickBox","PHTickBox","setPHTickBox","type","name","onInput","BeerList","beers","map","beer","desciption","image_url","abv","ph","App","setBeers","searchTerm","setSearchTerm","filterABV","setFilterABV","filterClassic","setFilterClassic","filterPH","setFilterPH","useEffect","URL","fetch","then","response","json","filter","handleClick","setFilter","filterTerm","event","target","value","formattedInput","toLowerCase","replace","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5aab0214.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/Capture.9179222e.PNG\";","export default __webpack_public_path__ + \"static/media/tick.0b6003e0.PNG\";","import React from \"react\";\r\nimport box from \"../../assets/images/Capture.PNG\";\r\nimport tick from \"../../assets/images/tick.PNG\";\r\n   \r\nconst Filters = (props) => {\r\n    const {handleABVFilter, handlePHFilter, handleClassicFilter, ABV, classic, PH} = props\r\n    let ABVImg = box\r\n    if(ABV){\r\n        ABVImg = tick\r\n    } else {\r\n        ABVImg = box\r\n    }\r\n    let ClassicImg = box\r\n    if(classic){\r\n        ClassicImg = tick\r\n    } else {\r\n        ClassicImg = box\r\n    }\r\n    let PHImg = box\r\n    if(PH){\r\n        PHImg = tick\r\n        console.log(PH)\r\n    } else {\r\n        PHImg = box\r\n    }\r\n\r\n   return(  \r\n       <>      \r\n            <div className=\"ABV-filter\">\r\n                <p className=\"filter-name\">High ABV (6.0%)</p>\r\n                <img src={ABVImg} alt=\"\" className=\"iconify\" onClick={handleABVFilter}/>\r\n            </div>\r\n            <div className=\"Classic-filter\">\r\n                <p className=\"filter-name\">Classic Range</p>\r\n                <img src={ClassicImg} alt=\"\" className=\"iconify\" onClick={handleClassicFilter}/>\r\n            </div>\r\n            <div className=\"PH-filter\">\r\n                <p className=\"filter-name\">Acidic (ph under 4)</p>\r\n                <img src={PHImg} alt=\"\" className=\"iconify\" onClick={handlePHFilter} />\r\n            </div>        \r\n        </>\r\n    )\r\n}\r\nexport default Filters;\r\n\r\n//<span onClick={handleFilter} className=\"iconify\" data-icon={icon}></span>\r\n","import React, {useState} from \"react\";\r\nimport \"./SideNav.scss\";\r\n//import SearchBar from \"../SearchBar/SearchBar\";\r\nimport Filters from \"../../components/Filters/Filters\";\r\n\r\n\r\nconst SideNav = (props) => {\r\n    const {searchABV, searchClassic, searchPH, handleInput} = props;\r\n    //const [searchTerm, setSearchTerm] = useState('');\r\n    const [ABVTickBox, setABVTickBox] = useState(false)\r\n    const [classicTickBox, setClassicTickBox] = useState(false)\r\n    const [PHTickBox, setPHTickBox] = useState(false)\r\n    \r\n     \r\n    const handleABVFilter = () => {\r\n        setABVTickBox(!ABVTickBox);\r\n        searchABV();        \r\n    }\r\n    const handleClassicFilter = () => {\r\n        setClassicTickBox(!classicTickBox);\r\n        searchClassic();\r\n    }\r\n    const handlePHFilter = () => {\r\n        setPHTickBox(!PHTickBox);\r\n        console.log(PHTickBox)\r\n        searchPH();\r\n    }\r\n        /*console.log(\"handlingClick\", tickBox)\r\n        if(tickBox === false) {\r\n            tickbox = \"ic:baseline-check-box-outline-blank\"\r\n            //tickBox === true;\r\n            console.log(\"handlingClick\", tickBox)\r\n        } else if(tickBox === true) {\r\n            tickbox = \"ic:outline-check-box\"\r\n            //tickBox === false;\r\n            console.log(\"handlingClick\", tickBox)\r\n        }\r\n        return tickbox\r\n    } */\r\n\r\n    return(\r\n        <nav className=\"nav\">\r\n            <form className=\"search-box\">                \r\n                <input type=\"text\" name=\"search\" onInput={handleInput} className=\"search-box__input\"/>\r\n            </form>      \r\n            <Filters handleABVFilter={handleABVFilter} handleClassicFilter={handleClassicFilter} handlePHFilter={handlePHFilter} ABV={ABVTickBox} classic={classicTickBox} PH={PHTickBox}/>\r\n        </nav>\r\n    )\r\n}\r\nexport default SideNav;\r\n\r\n//<span class=\"iconify\" data-icon=\"ic:baseline-check-box-outline-blank\"></span>\r\n//<span class=\"iconify\" data-icon=\"ic:outline-check-box\"></span>\r\n\r\n/*\r\nconst [ABVTickBox, setABVTickBox] = useState(false)\r\n    const [classicTickBox, setClassicTickBox] = useState(false)\r\n    const [PHTickBox, setPHTickBox] = useState(false) \r\n    \r\n\r\n    const handleInput = event => {\r\n        const cleanInput = event.target.value.toLowerCase();\r\n        setSearchTerm(cleanInput);\r\n      };\r\n    \r\n      const filteredBeers= beersArr.filter(beer => {\r\n        const beerName = beer.name.toLowerCase();\r\n    \r\n        return beerName.includes(searchTerm) //&& beer.strAlbumThumb;\r\n      });\r\n\r\n      */\r\n\r\n//<SearchBar searchTerm={searchTerm} handleInput={handleInput}/>","import React from \"react\";\r\nimport './BeerList.scss';\r\n\r\nconst BeerList = (props) => {\r\n\r\n    const {beers} = props;\r\n    \r\n    console.log(beers)\r\n\r\n    const BeerTiles= beers.map((beer) => {\r\n        return (\r\n            <div className=\"beerTile\">                \r\n                <h4>{beer.name}</h4>\r\n                <p>{beer.desciption}</p>              \r\n                <img className=\"beerPic\" src={beer.image_url} alt =\"\"/>\r\n                <p>ABV: {beer.abv}%</p>  \r\n                <p>PH: {beer.ph}</p>  \r\n            </div>\r\n        )\r\n    })\r\n    \r\n    return (\r\n        BeerTiles\r\n    )    \r\n}\r\n\r\nexport default BeerList;","import React, { useState, useEffect } from 'react';\r\nimport './App.css';\r\nimport SideNav from \"./containers/SideNav/SideNav\";\r\nimport BeerList from './components/BeerList/BeerList';\r\n//import beers from \"./assets/data/beers\";\r\n\r\nconst App = () => {\r\n\r\n  const [beers, setBeers] = useState([]);\r\n  const [searchTerm, setSearchTerm] = useState(\"\");\r\n  const [filterABV, setFilterABV] = useState(\"\");\r\n  const [filterClassic, setFilterClassic] = useState(\"\");\r\n  const [filterPH, setFilterPH] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    const URL = `https://api.punkapi.com/v2/beers?per_page-40${searchTerm}${filterABV}${filterClassic}`\r\n    fetch(URL).then(response => {\r\n      return response.json();\r\n    }).then(beers => {\r\n      if (filterPH === \"filter\") {\r\n        setBeers(beers.filter(beer => beer.ph < 4))\r\n      } else {\r\n        setBeers(beers)\r\n      }\r\n    })\r\n  }, [searchTerm, filterClassic, filterABV, filterPH])\r\n\r\n  const handleClick = (filter, setFilter, filterTerm) => {\r\n    if (filter === \"\") {\r\n      setFilter(filterTerm)\r\n    } else if (filter === filterTerm) {\r\n      setFilter(\"\")\r\n    }\r\n  }\r\n\r\n  const handleInput = event => {\r\n    if (event.target.value === \"\"){\r\n      setSearchTerm(\"\");\r\n    } else {\r\n      const formattedInput = event.target.value.toLowerCase().replace(\" \", \"_\");\r\n      console.log(formattedInput)\r\n      setSearchTerm(\"&beer_name=\" + formattedInput)\r\n    }\r\n  }\r\n\r\n  const searchABV = () => {\r\n    handleClick(filterABV, setFilterABV, \"&abv_gt=6\")\r\n  }\r\n\r\n  const searchClassic = () => {\r\n    handleClick(filterClassic, setFilterClassic, \"&brewed_before=01-2010\")\r\n  }\r\n\r\n  const searchPH = () => {\r\n    handleClick(filterPH, setFilterPH, \"filter\")\r\n  }\r\n \r\n  return (   <div className=\"App\">\r\n      <span className=\"sideNav\">\r\n        <SideNav searchTerm = {searchTerm} searchABV={searchABV} searchClassic={searchClassic} searchPH={searchPH} handleInput={handleInput}/>\r\n      </span>\r\n      <span className=\"beerList\">\r\n        <BeerList beers = {beers} />\r\n      </span>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}